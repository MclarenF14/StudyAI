{"ast":null,"code":"var _jsxFileName = \"/workspaces/StudyAI/client/src/NoteUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoteUpload({\n  onExtractedText\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [ocrText, setOcrText] = useState('');\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!image) return;\n    setLoading(true);\n    const {\n      data: {\n        text\n      }\n    } = await Tesseract.recognize(image, 'eng');\n    setOcrText(text);\n    setLoading(false);\n    onExtractedText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Note Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading || !image,\n      children: loading ? 'Extracting...' : 'Extract Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), ocrText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: ocrText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteUpload, \"PsTtIKE7KQzm02J6Ax1pH9eQ9Pk=\");\n_c = NoteUpload;\nexport default NoteUpload;\nvar _c;\n$RefreshReg$(_c, \"NoteUpload\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","NoteUpload","onExtractedText","_s","image","setImage","loading","setLoading","ocrText","setOcrText","handleFileChange","e","target","files","handleUpload","data","text","recognize","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/workspaces/StudyAI/client/src/NoteUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\n\nfunction NoteUpload({ onExtractedText }) {\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [ocrText, setOcrText] = useState('');\n\n  const handleFileChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!image) return;\n    setLoading(true);\n    const { data: { text } } = await Tesseract.recognize(image, 'eng');\n    setOcrText(text);\n    setLoading(false);\n    onExtractedText(text);\n  };\n\n  return (\n    <div>\n      <h2>Upload Note Photo</h2>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={loading || !image}>\n        {loading ? 'Extracting...' : 'Extract Text'}\n      </button>\n      {ocrText && (\n        <div>\n          <h3>Extracted Text:</h3>\n          <pre>{ocrText}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NoteUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,KAAK,EAAE;IACZG,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM;MAAEQ,IAAI,EAAE;QAAEC;MAAK;IAAE,CAAC,GAAG,MAAMlB,SAAS,CAACmB,SAAS,CAACb,KAAK,EAAE,KAAK,CAAC;IAClEK,UAAU,CAACO,IAAI,CAAC;IAChBT,UAAU,CAAC,KAAK,CAAC;IACjBL,eAAe,CAACc,IAAI,CAAC;EACvB,CAAC;EAED,oBACEhB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEf;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEtB,OAAA;MAAQ0B,OAAO,EAAEZ,YAAa;MAACa,QAAQ,EAAErB,OAAO,IAAI,CAACF,KAAM;MAAAc,QAAA,EACxDZ,OAAO,GAAG,eAAe,GAAG;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACRd,OAAO,iBACNR,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtB,OAAA;QAAAkB,QAAA,EAAMV;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAjCQF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}