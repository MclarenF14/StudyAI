{"ast":null,"code":"var _jsxFileName = \"/workspaces/StudyAI/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport NoteUpload from './NoteUpload';\nimport ActivitySelector from './ActivitySelector';\nimport GeneratedActivity from './GeneratedActivity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [activity, setActivity] = useState(null);\n  const [questionCount, setQuestionCount] = useState(0);\n  const handleLoginSuccess = credentialResponse => {\n    setUser(credentialResponse);\n  };\n  const handleExtractedText = text => {\n    setExtractedText(text);\n  };\n  const handleActivitySelect = (selectedActivity, count) => {\n    setActivity(selectedActivity);\n    setQuestionCount(count);\n    // Next: Generate quiz/flashcards/game based on extractedText, selectedActivity, and count\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"StudyAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload your notes, generate quizzes, flashcards, or games!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome! You are logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NoteUpload, {\n        onExtractedText: handleExtractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), extractedText && !activity && /*#__PURE__*/_jsxDEV(ActivitySelector, {\n        extractedText: extractedText,\n        onSelect: handleActivitySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), activity && /*#__PURE__*/_jsxDEV(GeneratedActivity, {\n        activity: activity,\n        text: extractedText,\n        count: questionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FEuKgb+v0rA1EYnuSEkNHMihaXQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleLoginButton","NoteUpload","ActivitySelector","GeneratedActivity","jsxDEV","_jsxDEV","App","_s","user","setUser","extractedText","setExtractedText","activity","setActivity","questionCount","setQuestionCount","handleLoginSuccess","credentialResponse","handleExtractedText","text","handleActivitySelect","selectedActivity","count","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","onExtractedText","onSelect","_c","$RefreshReg$"],"sources":["/workspaces/StudyAI/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport NoteUpload from './NoteUpload';\nimport ActivitySelector from './ActivitySelector';\nimport GeneratedActivity from './GeneratedActivity';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [activity, setActivity] = useState(null);\n  const [questionCount, setQuestionCount] = useState(0);\n\n  const handleLoginSuccess = (credentialResponse) => {\n    setUser(credentialResponse);\n  };\n\n  const handleExtractedText = (text) => {\n    setExtractedText(text);\n  };\n\n  const handleActivitySelect = (selectedActivity, count) => {\n    setActivity(selectedActivity);\n    setQuestionCount(count);\n    // Next: Generate quiz/flashcards/game based on extractedText, selectedActivity, and count\n  };\n\n  return (\n    <div>\n      <h1>StudyAI</h1>\n      <p>Upload your notes, generate quizzes, flashcards, or games!</p>\n      {!user ? (\n        <GoogleLoginButton onLoginSuccess={handleLoginSuccess} />\n      ) : (\n        <div>\n          <p>Welcome! You are logged in.</p>\n          <NoteUpload onExtractedText={handleExtractedText} />\n          {extractedText && !activity && (\n            <ActivitySelector extractedText={extractedText} onSelect={handleActivitySelect} />\n          )}\n          {activity && (\n            <GeneratedActivity activity={activity} text={extractedText} count={questionCount} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMiB,kBAAkB,GAAIC,kBAAkB,IAAK;IACjDR,OAAO,CAACQ,kBAAkB,CAAC;EAC7B,CAAC;EAED,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;IACpCR,gBAAgB,CAACQ,IAAI,CAAC;EACxB,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,gBAAgB,EAAEC,KAAK,KAAK;IACxDT,WAAW,CAACQ,gBAAgB,CAAC;IAC7BN,gBAAgB,CAACO,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtB,OAAA;MAAAkB,QAAA,EAAG;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChE,CAACnB,IAAI,gBACJH,OAAA,CAACL,iBAAiB;MAAC4B,cAAc,EAAEZ;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzDtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCtB,OAAA,CAACJ,UAAU;QAAC4B,eAAe,EAAEX;MAAoB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACnDjB,aAAa,IAAI,CAACE,QAAQ,iBACzBP,OAAA,CAACH,gBAAgB;QAACQ,aAAa,EAAEA,aAAc;QAACoB,QAAQ,EAAEV;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClF,EACAf,QAAQ,iBACPP,OAAA,CAACF,iBAAiB;QAACS,QAAQ,EAAEA,QAAS;QAACO,IAAI,EAAET,aAAc;QAACY,KAAK,EAAER;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}