{"ast":null,"code":"var _jsxFileName = \"/workspaces/StudyAI/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport Header from './Header';\nimport UploadSection from './UploadSection';\nimport ActivityCards from './ActivityCards';\nimport ActivitySelector from './ActivitySelector';\nimport GeneratedActivity from './GeneratedActivity';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [activity, setActivity] = useState(null);\n  const [questionCount, setQuestionCount] = useState(0);\n  const handleLoginSuccess = credentialResponse => {\n    setUser(credentialResponse);\n  };\n  const handleExtractedText = text => {\n    setExtractedText(text);\n  };\n  const handleActivitySelect = (selectedActivity, count) => {\n    setActivity(selectedActivity);\n    setQuestionCount(count);\n    // Next: Generate quiz/flashcards/game based on extractedText, selectedActivity, and count\n  };\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showCards, setShowCards] = useState(false);\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    setShowCards(true);\n  };\n  const handleCardSelect = cardType => {\n    setActivity(cardType);\n    setQuestionCount(5); // Default, can add selector later\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UploadSection, {\n        onFileSelect: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), showCards && !activity && /*#__PURE__*/_jsxDEV(ActivityCards, {\n        onSelect: handleCardSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), activity && selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-section\",\n        children: [/*#__PURE__*/_jsxDEV(NoteUpload, {\n          onExtractedText: setExtractedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), extractedText && /*#__PURE__*/_jsxDEV(GeneratedActivity, {\n          activity: activity,\n          text: extractedText,\n          count: questionCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"16JaByeW3KUJOrvQGjF+gyPPMDo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleLoginButton","Header","UploadSection","ActivityCards","ActivitySelector","GeneratedActivity","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","extractedText","setExtractedText","activity","setActivity","questionCount","setQuestionCount","handleLoginSuccess","credentialResponse","handleExtractedText","text","handleActivitySelect","selectedActivity","count","selectedFile","setSelectedFile","showCards","setShowCards","handleFileSelect","file","handleCardSelect","cardType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","onFileSelect","onSelect","NoteUpload","onExtractedText","_c","$RefreshReg$"],"sources":["/workspaces/StudyAI/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GoogleLoginButton from './GoogleLoginButton';\nimport Header from './Header';\nimport UploadSection from './UploadSection';\nimport ActivityCards from './ActivityCards';\nimport ActivitySelector from './ActivitySelector';\nimport GeneratedActivity from './GeneratedActivity';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [activity, setActivity] = useState(null);\n  const [questionCount, setQuestionCount] = useState(0);\n\n  const handleLoginSuccess = (credentialResponse) => {\n    setUser(credentialResponse);\n  };\n\n  const handleExtractedText = (text) => {\n    setExtractedText(text);\n  };\n\n  const handleActivitySelect = (selectedActivity, count) => {\n    setActivity(selectedActivity);\n    setQuestionCount(count);\n    // Next: Generate quiz/flashcards/game based on extractedText, selectedActivity, and count\n  };\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showCards, setShowCards] = useState(false);\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    setShowCards(true);\n  };\n\n  const handleCardSelect = (cardType) => {\n    setActivity(cardType);\n    setQuestionCount(5); // Default, can add selector later\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Header />\n      {!user ? (\n        <GoogleLoginButton onLoginSuccess={handleLoginSuccess} />\n      ) : (\n        <>\n          <UploadSection onFileSelect={handleFileSelect} />\n          {showCards && !activity && (\n            <ActivityCards onSelect={handleCardSelect} />\n          )}\n          {activity && selectedFile && (\n            <div className=\"generated-section\">\n              {/* Use NoteUpload for OCR, then show GeneratedActivity */}\n              <NoteUpload onExtractedText={setExtractedText} />\n              {extractedText && (\n                <GeneratedActivity activity={activity} text={extractedText} count={questionCount} />\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}