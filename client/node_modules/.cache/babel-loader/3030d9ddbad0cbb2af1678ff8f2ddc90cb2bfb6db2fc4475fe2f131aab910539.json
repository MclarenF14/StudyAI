{"ast":null,"code":"var _jsxFileName = \"/workspaces/StudyAI/client/src/GeneratedActivity.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateQuiz(text, count) {\n  // Simple placeholder: split text into sentences and make questions\n  const sentences = text.split('.').map(s => s.trim()).filter(Boolean);\n  return sentences.slice(0, count).map((sentence, idx) => ({\n    question: `What is the meaning of: \"${sentence}\"?`,\n    answer: sentence\n  }));\n}\nfunction generateFlashcards(text, count) {\n  // Simple placeholder: split text into lines\n  const lines = text.split('\\n').map(l => l.trim()).filter(Boolean);\n  return lines.slice(0, count).map((line, idx) => ({\n    front: `Term ${idx + 1}`,\n    back: line\n  }));\n}\nfunction generateGame(text, count) {\n  // Simple placeholder: word scramble game\n  const words = text.split(/\\s+/).filter(Boolean);\n  return words.slice(0, count).map((word, idx) => ({\n    scrambled: word.split('').sort(() => 0.5 - Math.random()).join(''),\n    answer: word\n  }));\n}\nfunction GeneratedActivity({\n  activity,\n  text,\n  count\n}) {\n  let content = null;\n  if (activity === 'quiz') {\n    const quiz = generateQuiz(text, count);\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), quiz.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Q\", i + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", q.answer, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else if (activity === 'flashcards') {\n    const flashcards = generateFlashcards(text, count);\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), flashcards.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: card.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: card.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  } else if (activity === 'game') {\n    const games = generateGame(text, count);\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Word Scramble Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), games.map((g, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scrambled:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" \", g.scrambled, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \", g.answer, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n_c = GeneratedActivity;\nexport default GeneratedActivity;\nvar _c;\n$RefreshReg$(_c, \"GeneratedActivity\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","generateQuiz","text","count","sentences","split","map","s","trim","filter","Boolean","slice","sentence","idx","question","answer","generateFlashcards","lines","l","line","front","back","generateGame","words","word","scrambled","sort","Math","random","join","GeneratedActivity","activity","content","quiz","children","fileName","_jsxFileName","lineNumber","columnNumber","q","i","flashcards","card","games","g","_c","$RefreshReg$"],"sources":["/workspaces/StudyAI/client/src/GeneratedActivity.js"],"sourcesContent":["import React from 'react';\n\nfunction generateQuiz(text, count) {\n  // Simple placeholder: split text into sentences and make questions\n  const sentences = text.split('.').map(s => s.trim()).filter(Boolean);\n  return sentences.slice(0, count).map((sentence, idx) => ({\n    question: `What is the meaning of: \"${sentence}\"?`,\n    answer: sentence\n  }));\n}\n\nfunction generateFlashcards(text, count) {\n  // Simple placeholder: split text into lines\n  const lines = text.split('\\n').map(l => l.trim()).filter(Boolean);\n  return lines.slice(0, count).map((line, idx) => ({\n    front: `Term ${idx + 1}`,\n    back: line\n  }));\n}\n\nfunction generateGame(text, count) {\n  // Simple placeholder: word scramble game\n  const words = text.split(/\\s+/).filter(Boolean);\n  return words.slice(0, count).map((word, idx) => ({\n    scrambled: word.split('').sort(() => 0.5 - Math.random()).join(''),\n    answer: word\n  }));\n}\n\nfunction GeneratedActivity({ activity, text, count }) {\n  let content = null;\n  if (activity === 'quiz') {\n    const quiz = generateQuiz(text, count);\n    content = (\n      <div>\n        <h2>Quiz</h2>\n        {quiz.map((q, i) => (\n          <div key={i}>\n            <strong>Q{i + 1}:</strong> {q.question}\n            <br />\n            <em>Answer:</em> {q.answer}\n            <hr />\n          </div>\n        ))}\n      </div>\n    );\n  } else if (activity === 'flashcards') {\n    const flashcards = generateFlashcards(text, count);\n    content = (\n      <div>\n        <h2>Flashcards</h2>\n        {flashcards.map((card, i) => (\n          <div key={i}>\n            <strong>{card.front}</strong>\n            <br />\n            <em>{card.back}</em>\n            <hr />\n          </div>\n        ))}\n      </div>\n    );\n  } else if (activity === 'game') {\n    const games = generateGame(text, count);\n    content = (\n      <div>\n        <h2>Word Scramble Game</h2>\n        {games.map((g, i) => (\n          <div key={i}>\n            <strong>Scrambled:</strong> {g.scrambled}\n            <br />\n            <em>Answer:</em> {g.answer}\n            <hr />\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return <div>{content}</div>;\n}\n\nexport default GeneratedActivity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}